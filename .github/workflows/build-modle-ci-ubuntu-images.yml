# Copyright (C) 2022 Roberto Rossini (roberros@uio.no)
# SPDX-License-Identifier: MIT

name: Build Ubuntu Docker for MoDLE CI
on:
  push:
    branches: [ main, devel, ci-devel ]
    paths:
      - ".github/workflows/build-modle-ci-ubuntu-images.yml"
      - "ubuntu-modle-ci.Dockerfile"
  pull_request:
    branches: [ main, devel, ci-devel ]
    paths:
      - ".github/workflows/build-modle-ci-ubuntu-images.yml"
      - "ubuntu-modle-ci.Dockerfile"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os-version:
          - 20.04
        image-version:
          - 20220317
        compiler:
          - gcc-7
          - gcc-8
          - gcc-9
          - gcc-10
          - gcc-11
          - clang-6.0
          - clang-7
          - clang-8
          - clang-9
          - clang-10
          - clang-11
          - clang-12
          - clang-13
        cmake:
          - 3.22.2
        conan:
          - 1.45.0
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract compiler name and version
        id: compiler-info
        run: |
          compiler_name="$(echo "${{ matrix.compiler}}" | grep -oP '^[[:alnum:]]+-' | tr -d '-')"
          compiler_version="$(echo "${{ matrix.compiler}}" | grep -oP '\-[.[:alnum:]]+$' | tr -d '-')"
          echo "::set-output name=name::$compiler_name"
          echo "::set-output name=version::$compiler_version"

      - name: Generate base image label
        id: generate-base-img-label
        run: |
          label="ghcr.io/${{ github.repository }}/ubuntu-${{ matrix.os-version }}-cxx-${{ matrix.compiler }}:${{ matrix.image-version }}"
          
          echo "::set-output name=label::$label"

      - name: Generate image name
        id: generate-img-name
        run: |
          name="ghcr.io/${{ github.repository }}/modle/ubuntu-${{ matrix.os-version }}-cxx-${{ matrix.compiler }}"
          
          echo "::set-output name=name::$name"

      - name: Generate cache key
        id: cache-key
        run: |
          os="ubuntu:${{ matrix.os-version }}"
          compiler="${{ matrix.compiler }}"
          cmake_ver="cmake-${{ matrix.cmake }}"
          conan_ver="conan-${{ matrix.conan }}"
          
          echo "::set-output name=key::modle-ci-$os-$compiler-$cmake_ver-$conan_ver"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.generate-img-name.outputs.name }}
          flavor: |
             latest=true
          tags: |
            type=raw,value=${{ matrix.image-version }}
            
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image and push to registries
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          file: ubuntu-modle-ci.Dockerfile
          cache-from: type=gha,scope=${{ steps.cache-key.outputs.key }}
          cache-to: type=gha,mode=min,scope=${{ steps.cache-key.outputs.key }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_OS=${{ steps.generate-base-img-label.outputs.label }}
            COMPILER_NAME=${{ steps.compiler-info.outputs.name }}
            COMPILER_VERSION=${{ steps.compiler-info.outputs.version }}
            CMAKE_VERSION=${{ matrix.cmake }}
            CONAN_VERSION=${{ matrix.conan }}
