# Copyright (C) 2023 Roberto Rossini (roberros@uio.no)
# SPDX-License-Identifier: MIT

name: "Build AlmaLinux 9 Docker image to build portable Linux binaries"
on:
  push:
    branches: [ main, devel, ci-devel ]
    paths:
      - ".github/workflows/build-almalinux9-cxx-image.yml"
      - "dockerfiles/almalinux9-cxx.Dockerfile"
  pull_request:
    branches: [ main, devel, ci-devel ]
    paths:
      - ".github/workflows/build-almalinux9-cxx-image.yml"
      - "dockerfiles/almalinux9-cxx.Dockerfile"
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build-almalinux9-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract commit author date
        id: commit-date
        run: |
          cdate="$(git show -s --format='%as' HEAD | tr -d '-')"
          _date="$(date +%Y%m%d)"
          
          echo "commit_date=$cdate" >> $GITHUB_OUTPUT
          echo "date=$_date" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/almalinux9-gcc-12
          flavor: latest=true
          tags: type=raw,value=${{ steps.commit-date.outputs.date }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Build Docker image and push to registries
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          file: dockerfiles/almalinux9-cxx.Dockerfile
          cache-from: type=gha,scope=${{ steps.cache-key.outputs.key }}
          cache-to: type=gha,mode=min,scope=${{ steps.cache-key.outputs.key }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

  test-image:
    needs: build-almalinux9-image
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/almalinux9-gcc-12
      options: "--entrypoint entrypoint.sh --user=root"

    steps:
      - name: Print distro information
        run: cat /etc/*-release

      - name: Print compiler information
        run: |
          cc --version
          c++ --version

      - name: Print CMake information
        run: |
          which cmake
          cmake --version

      - name: Test Conan
        run: |
          printf '[requires]\nfmt/9.1.0' > conanfile.txt
          conan install --build=missing \
            -pr:b="$CONAN_DEFAULT_PROFILE_PATH" \
            -pr:h="$CONAN_DEFAULT_PROFILE_PATH" \
            conanfile.txt
