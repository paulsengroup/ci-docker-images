# Copyright (C) 2022 Roberto Rossini (roberros@uio.no)
# SPDX-License-Identifier: MIT

name: Build Ubuntu Docker images

on:
  push:
    branches: [ main, devel, testing-ci ]
    paths:
      - ".github/workflows/build-ubuntu-images.yml"
      - "ubuntu.Dockerfile"
  pull_request:
    branches: [ main, devel, testing-ci ]
    paths:
      - ".github/workflows/build-ubuntu-images.yml"
      - "ubuntu.Dockerfile"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - gcc-7
          - gcc-8
          - gcc-9
          - gcc-10
          - gcc-11
          - clang-6.0
          - clang-7
          - clang-8
          - clang-9
          - clang-10
          - clang-11
          - clang-12
          - clang-13
        cmake:
          - 3.22.2
        conan:
          - 1.45.0

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract compiler name and version
        id: compiler-info
        run: |
          compiler_name="$(echo "${{ matrix.compiler}}" | grep -oP '^[[:alnum:]]+-' | tr -d '-')"
          compiler_version="$(echo "${{ matrix.compiler}}" | grep -oP '\-[[:alnum:]]+$' | tr -d '-')"

          echo "::set-output name=name::$compiler_name"
          echo "::set-output name=version::$compiler_version"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/robomics/ubuntu-ci-${{ steps.compiler-info.outputs.name }}
          tags: type=value=${{ steps.compiler-info.outputs.version }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image and push to registries
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          file: ubuntu-ci.Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=min
          build-args: |
            --build-arg "COMPILER_NAME=${{ steps.compiler-info.outputs.name }}" \
            --build-arg "COMPILER_VERSION=${{ steps.compiler-info.outputs.version }}" \
            --build-arg "CMAKE_VERSION=${{ matrix.cmake }}" \
            --build-arg "CONAN_VERSION=${{ matrix.conan }}"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
