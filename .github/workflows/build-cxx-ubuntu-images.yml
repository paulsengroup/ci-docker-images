# Copyright (C) 2022 Roberto Rossini (roberros@uio.no)
# SPDX-License-Identifier: MIT

name: "Build Ubuntu Docker images for CXX development/testing"
on:
  push:
    branches: [ main, devel, ci-devel ]
    paths:
      - ".github/workflows/build-cxx-ubuntu-images.yml"
      - "dockerfiles/ubuntu-cxx.Dockerfile"
  pull_request:
    branches: [ main, devel, ci-devel ]
    paths:
      - ".github/workflows/build-cxx-ubuntu-images.yml"
      - "dockerfiles/ubuntu-cxx.Dockerfile"
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build-dockerfile:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.commit-date.outputs.date }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { compiler-name: gcc,   compiler-version: 8,  os-name: ubuntu, os-version: 20.04, python-version: 3.9,  cmake: '3.26.*', conan: '2.0.*' }
          - { compiler-name: gcc,   compiler-version: 9,  os-name: ubuntu, os-version: 22.04, python-version: 3.11, cmake: '3.26.*', conan: '2.0.*' }
          - { compiler-name: gcc,   compiler-version: 10, os-name: ubuntu, os-version: 22.04, python-version: 3.11, cmake: '3.26.*', conan: '2.0.*' }
          - { compiler-name: gcc,   compiler-version: 11, os-name: ubuntu, os-version: 22.04, python-version: 3.11, cmake: '3.26.*', conan: '2.0.*' }
          - { compiler-name: gcc,   compiler-version: 12, os-name: ubuntu, os-version: 22.04, python-version: 3.11, cmake: '3.26.*', conan: '2.0.*' }

          - { compiler-name: clang, compiler-version: 8,  os-name: ubuntu, os-version: 20.04, python-version: 3.9,  cmake: '3.26.*', conan: '2.0.*' }
          - { compiler-name: clang, compiler-version: 9,  os-name: ubuntu, os-version: 20.04, python-version: 3.9,  cmake: '3.26.*', conan: '2.0.*' }
          - { compiler-name: clang, compiler-version: 10, os-name: ubuntu, os-version: 20.04, python-version: 3.9,  cmake: '3.26.*', conan: '2.0.*' }
          - { compiler-name: clang, compiler-version: 11, os-name: ubuntu, os-version: 22.04, python-version: 3.11, cmake: '3.26.*', conan: '2.0.*' }
          - { compiler-name: clang, compiler-version: 12, os-name: ubuntu, os-version: 22.04, python-version: 3.11, cmake: '3.26.*', conan: '2.0.*' }
          - { compiler-name: clang, compiler-version: 13, os-name: ubuntu, os-version: 22.04, python-version: 3.11, cmake: '3.26.*', conan: '2.0.*' }
          - { compiler-name: clang, compiler-version: 14, os-name: ubuntu, os-version: 22.04, python-version: 3.11, cmake: '3.26.*', conan: '2.0.*' }
          - { compiler-name: clang, compiler-version: 15, os-name: ubuntu, os-version: 22.04, python-version: 3.11, cmake: '3.26.*', conan: '2.0.*' }

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract commit author date
        id: commit-date
        run: |
          cdate="$(git show -s --format='%as' HEAD | tr -d '-')"
          _date="$(date +%Y%m%d)"
          
          echo "commit_date=$cdate" >> $GITHUB_OUTPUT
          echo "date=$_date" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.os-name }}-${{ matrix.os-version }}-cxx-${{ matrix.compiler-name }}-${{ matrix.compiler-version }}
          flavor: latest=true
          tags: type=raw,value=${{ steps.commit-date.outputs.date }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Generate cache key
        id: cache-key
        run: |
          os="ubuntu:${{ matrix.os-version }}"
          compiler="${{ matrix.compiler-name }}-${{ matrix.compiler-version }}"
          cmake_ver="cmake-${{ matrix.cmake }}"
          conan_ver="conan-${{ matrix.conan }}"
          
          echo "key=ubuntu-cxx-$os-$compiler-$cmake_ver-$conan_ver" >> $GITHUB_OUTPUT

      - name: Build Docker image and push to registries
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          file: dockerfiles/ubuntu-cxx.Dockerfile
          cache-from: type=gha,scope=${{ steps.cache-key.outputs.key }}
          cache-to: type=gha,mode=min,scope=${{ steps.cache-key.outputs.key }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            BASE_OS=${{ matrix.os-name }}:${{ matrix.os-version }}
            COMPILER_NAME=${{ matrix.compiler-name }}
            COMPILER_VERSION=${{ matrix.compiler-version }}
            CMAKE_VERSION=${{ matrix.cmake }}
            CONAN_VERSION=${{ matrix.conan }}
            PYTHON_VERSION=${{ matrix.python-version }}

  test-image:
    needs: build-dockerfile
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { image: "ghcr.io/${{ github.repository }}/ubuntu-20.04-cxx-gcc-8" }
          - { image: "ghcr.io/${{ github.repository }}/ubuntu-22.04-cxx-gcc-9" }
          - { image: "ghcr.io/${{ github.repository }}/ubuntu-22.04-cxx-gcc-10" }
          - { image: "ghcr.io/${{ github.repository }}/ubuntu-22.04-cxx-gcc-11" }
          - { image: "ghcr.io/${{ github.repository }}/ubuntu-22.04-cxx-gcc-12" }

          - { image: "ghcr.io/${{ github.repository }}/ubuntu-20.04-cxx-clang-8" }
          - { image: "ghcr.io/${{ github.repository }}/ubuntu-20.04-cxx-clang-9" }
          - { image: "ghcr.io/${{ github.repository }}/ubuntu-20.04-cxx-clang-10" }
          - { image: "ghcr.io/${{ github.repository }}/ubuntu-22.04-cxx-clang-11" }
          - { image: "ghcr.io/${{ github.repository }}/ubuntu-22.04-cxx-clang-12" }
          - { image: "ghcr.io/${{ github.repository }}/ubuntu-22.04-cxx-clang-13" }
          - { image: "ghcr.io/${{ github.repository }}/ubuntu-22.04-cxx-clang-14" }
          - { image: "ghcr.io/${{ github.repository }}/ubuntu-22.04-cxx-clang-15" }

    container:
      image: ${{ matrix.image }}:${{ needs.build-dockerfile.outputs.tag }}
      options: "--user=root"

    steps:
      - name: Print distro information
        run: cat /etc/*-release

      - name: Print compiler information
        run: |
          cc --version
          c++ --version

      - name: Print CMake information
        run: |
          which cmake
          cmake --version

      - name: Test Conan
        run: |
          printf '[requires]\nfmt/9.1.0' > conanfile.txt
          conan install --build=missing \
            -pr:b="$CONAN_DEFAULT_PROFILE_PATH" \
            -pr:h="$CONAN_DEFAULT_PROFILE_PATH" \
            conanfile.txt
