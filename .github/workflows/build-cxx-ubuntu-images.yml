# Copyright (C) 2022 Roberto Rossini (roberros@uio.no)
# SPDX-License-Identifier: MIT

name: "Build Ubuntu Docker images for CXX development/testing"
on:
  push:
    branches: [ main, devel, ci-devel ]
    paths:
      - ".github/workflows/build-cxx-ubuntu-images.yml"
      - "ubuntu-cxx.Dockerfile"
  pull_request:
    branches: [ main, devel, ci-devel ]
    paths:
      - ".github/workflows/build-cxx-ubuntu-images.yml"
      - "ubuntu-cxx.Dockerfile"
  workflow_dispatch:


jobs:
  build-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { compiler: gcc-7,     os-name: ubuntu, os-version: 20.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: gcc-8,     os-name: ubuntu, os-version: 20.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: gcc-9,     os-name: ubuntu, os-version: 22.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: gcc-10,    os-name: ubuntu, os-version: 22.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: gcc-11,    os-name: ubuntu, os-version: 22.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: gcc-12,    os-name: ubuntu, os-version: 22.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: clang-7,   os-name: ubuntu, os-version: 20.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: clang-8,   os-name: ubuntu, os-version: 20.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: clang-9,   os-name: ubuntu, os-version: 20.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: clang-10,  os-name: ubuntu, os-version: 20.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: clang-11,  os-name: ubuntu, os-version: 22.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: clang-12,  os-name: ubuntu, os-version: 22.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: clang-13,  os-name: ubuntu, os-version: 22.04,  cmake: '3.22.*', conan: '1.47.*' }
          - { compiler: clang-14,  os-name: ubuntu, os-version: 22.04,  cmake: '3.22.*', conan: '1.47.*' }

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract commit author date
        id: commit-date
        run: |
          cdate="$(git show -s --format='%as' HEAD | tr -d '-')"
          _date="$(date +%Y%m%d)"
          
          echo "::set-output name=commit_date::$cdate"
          echo "::set-output name=date::$_date"

      - name: Extract compiler name and version
        id: compiler-info
        run: |
          compiler_name="$(echo "${{ matrix.compiler}}" | grep -oP '^[[:alnum:]]+-' | tr -d '-')"
          compiler_version="$(echo "${{ matrix.compiler}}" | grep -oP '\-[.[:alnum:]]+$' | tr -d '-')"
          echo "::set-output name=name::$compiler_name"
          echo "::set-output name=version::$compiler_version"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.os-name }}-${{ matrix.os-version }}-cxx-${{ matrix.compiler }}
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{ steps.commit-date.outputs.date }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Generate cache key
        id: cache-key
        run: |
          os="ubuntu:${{ matrix.os-version }}"
          compiler="${{ matrix.compiler }}"
          cmake_ver="cmake-${{ matrix.cmake }}"
          conan_ver="conan-${{ matrix.conan }}"
          
          echo "::set-output name=key::ubuntu-cxx-$os-$compiler-$cmake_ver-$conan_ver"

      - name: Build Docker image and push to registries
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.event_name != 'pull_request' }}
          file: ubuntu-cxx.Dockerfile
          cache-from: type=gha,scope=${{ steps.cache-key.outputs.key }}
          cache-to: type=gha,mode=min,scope=${{ steps.cache-key.outputs.key }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_OS=${{ matrix.os-name }}:${{ matrix.os-version }}
            COMPILER_NAME=${{ steps.compiler-info.outputs.name }}
            COMPILER_VERSION=${{ steps.compiler-info.outputs.version }}
            CMAKE_VERSION=${{ matrix.cmake }}
            CONAN_VERSION=${{ matrix.conan }}
